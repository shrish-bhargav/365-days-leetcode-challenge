#include <string>

class Solution {
public:
    std::string reverseWords(std::string s) {
        int n = s.length();
        if (n == 0) return "";

        // Function to reverse a substring within the string
        auto reverseSubstring = [&](int start, int end) {
            while (start < end) {
                std::swap(s[start++], s[end--]);
            }
        };

        int wordStart = 0;
        for (int i = 0; i < n; ++i) {
            if (s[i] != ' ') { // Found the start of a word
                wordStart = i;
                while (i < n && s[i] != ' ') ++i; // Move i to the end of the word
                reverseSubstring(wordStart, i - 1); // Reverse the word
            }
        }

        // Remove extra spaces and leading/trailing spaces
        int i = 0, j = 0;
        while (j < n) {
            while (j < n && s[j] == ' ') ++j; // Skip leading spaces
            while (j < n && s[j] != ' ') s[i++] = s[j++]; // Copy non-space characters
            while (j < n && s[j] == ' ') ++j; // Skip extra spaces between words
            if (j < n) s[i++] = ' '; // Add a single space between words
        }

        s.resize(i); // Resize string to remove trailing characters
        reverseSubstring(0, i - 1); // Reverse the entire string
        return s;
    }
};
